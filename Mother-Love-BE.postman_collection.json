{
	"info": {
		"_postman_id": "deb83d05-1804-4356-b6aa-0abbba3ab894",
		"name": "Mother-Love-BE",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "29956265",
		"_collection_link": "https://martian-capsule-948520.postman.co/workspace/My-Workspace~cedbe8b2-557f-40cb-892b-a176a21815c7/collection/29956265-deb83d05-1804-4356-b6aa-0abbba3ab894?action=share&source=collection_link&creator=29956265"
	},
	"item": [
		{
			"name": "Address",
			"item": [
				{
					"name": "Get Address",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJuZ3V5ZW50aWVuZHVuZyIsImlhdCI6MTcxODY0MjQ2NSwiZXhwIjoxNzE4NzI4ODY1fQ.nuTNxjIKYpCBqe07sAScBLTW_wp8KdNZI1QrBk52tl1-zBgM0GOudFH4oNB5Zhnt"
							}
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/address?pageNo=0&pageSize=10&sortBy=addressId&sortDir=asc",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"address"
							],
							"query": [
								{
									"key": "pageNo",
									"value": "0"
								},
								{
									"key": "pageSize",
									"value": "10"
								},
								{
									"key": "sortBy",
									"value": "addressId"
								},
								{
									"key": "sortDir",
									"value": "asc"
								}
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Get Address By UserId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJuZ3V5ZW5kdWNzb24iLCJpYXQiOjE3MTg4MDkwMzQsImV4cCI6MTcxODg5NTQzNH0.x5DCZ-vfQ_w2s9Hb8HcnsCy0_5NYWlnBNLupqxFBdBlcw95TP2WD_z6kQmEQFXPo"
							}
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/address/user?pageNo=0&pageSize=10&sortBy=addressId&sortDir=asc&userId=4",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"address",
								"user"
							],
							"query": [
								{
									"key": "pageNo",
									"value": "0"
								},
								{
									"key": "pageSize",
									"value": "10"
								},
								{
									"key": "sortBy",
									"value": "addressId"
								},
								{
									"key": "sortDir",
									"value": "asc"
								},
								{
									"key": "userId",
									"value": "4"
								}
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Create Address",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJuZ3V5ZW50aWVuZHVuZyIsImlhdCI6MTcyMDAxNDg5NiwiZXhwIjoxNzIwMTAxMjk2fQ.IgD3_9T0uVo-Bhw38I7orlk2zhoW1x1k-Xz93CUR-0wudaWIy6VvAJDdmciLkJIo"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"addressLine\": \"S106\",\r\n  \"district\": \"Q9\",\r\n  \"city\": \"HCM\",\r\n  \"user\": {\r\n    \"userId\": 1\r\n  }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:8080/api/v1/address",
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Update Address",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJuZ3V5ZW50aWVuZHVuZyIsImlhdCI6MTcxODY0MjQ2NSwiZXhwIjoxNzE4NzI4ODY1fQ.nuTNxjIKYpCBqe07sAScBLTW_wp8KdNZI1QrBk52tl1-zBgM0GOudFH4oNB5Zhnt"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"addressId\": 3,\r\n    \"addressLine\": \"S106\",\r\n    \"district\": \"Q9\",\r\n    \"city\": \"HCM\",\r\n    \"user\": {\r\n        \"userId\": 4,\r\n        \"fullName\": \"string\",\r\n        \"email\": \"nguyenducson2@gmail.com\",\r\n        \"phone\": \"0800433475\",\r\n        \"point\": 0,\r\n        \"image\": \"https://res.cloudinary.com/dpysbryyk/image/upload/v1717827115/Milk/UserDefault/dfzhxjcbnixmp8aybnge.jpg\",\r\n        \"roleName\": \"ROLE_MEMBER\",\r\n        \"firstLogin\": false\r\n    },\r\n    \"default\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:8080/api/v1/address",
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Set Default Address",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJuZHVjc29uQDEyMyIsImlhdCI6MTcxODgxMDIxOCwiZXhwIjoxNzE4ODk2NjE4fQ.tNdIQRSQYhR4o8q0XhHfkswoH5BawyCoS83k2uX0kH1MtF4NTmOKzWUS6udOEEML"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/address/default?userId=4&addressOldId=2&addressNewId=3",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"address",
								"default"
							],
							"query": [
								{
									"key": "userId",
									"value": "4"
								},
								{
									"key": "addressOldId",
									"value": "2"
								},
								{
									"key": "addressNewId",
									"value": "3"
								}
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Delete Address",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJuZ3V5ZW5kdWNzb24iLCJpYXQiOjE3MTk0MTk3MDEsImV4cCI6MTcxOTUwNjEwMX0.IeQEtuKtXuyIk7ZePAjfLAw61-5HLI1Uq2vTTepedDovqJ2u72dI0Ft-9JQuQR6f"
							}
						},
						"method": "DELETE",
						"header": [],
						"url": "http://localhost:8080/api/v1/address/13"
					},
					"response": []
				}
			]
		},
		{
			"name": "Feedback",
			"item": [
				{
					"name": "Get List Feedback in Manage",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": ""
							}
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/feedbacks?pageNo=0&pageSize=10&sortBy=feedbackId&sortDir=asc",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"feedbacks"
							],
							"query": [
								{
									"key": "pageNo",
									"value": "0"
								},
								{
									"key": "pageSize",
									"value": "10"
								},
								{
									"key": "sortBy",
									"value": "feedbackId"
								},
								{
									"key": "sortDir",
									"value": "asc"
								}
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Get List Feedbacks Of Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": ""
							}
						},
						"method": "GET",
						"header": [],
						"url": "http://localhost:8080/api/v1/feedbacks/product/1",
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Get List Feedbacks Of Order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": ""
							}
						},
						"method": "GET",
						"header": [],
						"url": "http://localhost:8080/api/v1/feedbacks/order/1",
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Search Feedback",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJuZ3V5ZW50aWVuZHVuZyIsImlhdCI6MTcyMDAwMDk1MCwiZXhwIjoxNzIwMDg3MzUwfQ.5lc1UorEJWDQGrkKaB6o1KOzNVqaoDMgq2XCy5xViUaO9X4eumI5DI4a20tTzgEf"
							}
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/feedbacks/search/1?rating=1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"feedbacks",
								"search",
								"1"
							],
							"query": [
								{
									"key": "rating",
									"value": "1"
								}
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Create Feedback",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJuZ3V5ZW5kdWNzb24iLCJpYXQiOjE3MjAwMDA5MTcsImV4cCI6MTcyMDA4NzMxN30.SrV1UboIHjCAwXHlNzMGCFi_YuKYkib_dhXxD5NSnk94kB-c1JbvWcU6AQBoAm_7"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n    \"rating\": 1,\r\n    \"comment\": \"string\",\r\n    \"image\": \"string\",\r\n    \"productId\": 1\r\n  },\r\n  {\r\n    \"rating\": 2,\r\n    \"comment\": \"string\",\r\n    \"image\": \"string\",\r\n    \"productId\": 2\r\n  }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/feedbacks?userId=1&orderId=1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"feedbacks"
							],
							"query": [
								{
									"key": "userId",
									"value": "1"
								},
								{
									"key": "orderId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Feedback",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJuZ3V5ZW5kdWNzb24iLCJpYXQiOjE3MTg5NjM0MzUsImV4cCI6MTcxOTA0OTgzNX0.9GA6Oj9CfTCMPzp9D_gYPvdrxMsbMzEwAjvVNiGdF8WgUmIX9FCfwChhlCDqmISW"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n        \"feedbackId\": 2,\r\n        \"rating\": -9,\r\n        \"comment\": \"string\",\r\n        \"image\": \"string\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:8080/api/v1/feedbacks"
					},
					"response": []
				},
				{
					"name": "Delete Feedback",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJuZ3V5ZW5kdWNzb24iLCJpYXQiOjE3MTg5NjM0MzUsImV4cCI6MTcxOTA0OTgzNX0.9GA6Oj9CfTCMPzp9D_gYPvdrxMsbMzEwAjvVNiGdF8WgUmIX9FCfwChhlCDqmISW"
							}
						},
						"method": "DELETE",
						"header": [],
						"url": "http://localhost:8080/api/v1/feedbacks/1"
					},
					"response": []
				}
			]
		},
		{
			"name": "Auth",
			"item": [
				{
					"name": "Log Out",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJzdHJpbmciLCJpYXQiOjE3MTc3NzA5NTAsImV4cCI6MTcxODM3NTc1MH0.gQSs-E0ueXTF2IqeXVEVNrDRTD83O96_AvRDWgQl6A6MUk_7zvRAQc7RqJtDB-JI"
							}
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:8080/logout",
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Get User Info",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJuZ3V5ZW5kdWNzb24iLCJpYXQiOjE3MTgzNTM4OTQsImV4cCI6MTcxODQ0MDI5NH0.vn4qDPCEkEymyviqYP3JCHVGsahpXXBGYMQAipnGIHVGrILErzkIUuE7ncHkeRSS"
							}
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:8080/api/v1/auth/user/info",
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userNameOrEmailOrPhone\": \"nguyentiendung\",\r\n  \"password\": \"ntiendung@123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:8080/api/v1/auth/user/login",
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Refresh Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJuZ3V5ZW50aWVuZHVuZyIsImlhdCI6MTcxODE3MDI1NiwiZXhwIjoxNzE4Nzc1MDU2fQ.DDcGogMjWR_RHbL-z7kYkLSUmrMzl71_7qebDkS1Ah54ApIbZiriLb7u4qt2EM5u"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userNameOrEmailOrPhone\": \"nguyentiendung\",\r\n  \"password\": \"ntiendung@123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:8080/api/v1/auth/refresh_token",
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Sign Up Member",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"stringst\",\r\n  \"email\": \"nguyenducson@gmail.com\",\r\n  \"password\": \"qV3nwJ2@E6\",\r\n  \"fullName\": \"string\",\r\n  \"phone\": \"8455083580\",\r\n  \"gender\": \"Female\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:8080/api/v1/auth/register/member",
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Change Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJuZ3V5ZW5kdWNzb24zMjEiLCJpYXQiOjE3MTg3ODIzMjYsImV4cCI6MTcxODg2ODcyNn0.78aI_Yw5So_19tStwgrkSzI96XHNl8_1bqAdpnuHA9TUfXCnQJ_kcxL6XftUhKQc"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"oldPassword\": \"Nguyen321@\",\r\n  \"newPassword\": \"Nguyenducson321@\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:8080/api/v1/auth/change-password",
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Sign Up Staff",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": ""
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"nducson11111\",\r\n  \"email\": \"nguyenducsonnnn2@gmail.com\",\r\n  \"password\": \"Nguyen321@\",\r\n  \"fullName\": \"string\",\r\n  \"phone\": \"0800433475\",\r\n  \"gender\": \"Female\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:8080/api/v1/auth/register/staff",
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				}
			]
		},
		{
			"name": "Order",
			"item": [
				{
					"name": "Get List Order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJuZ3V5ZW50aWVuZHVuZyIsImlhdCI6MTcxOTk5NTYzOCwiZXhwIjoxNzIwMDgyMDM4fQ.uCVSb5kCskW6jZZGpIR-hHDhRx9jHsTG0JGpKmI-G8QU-gcfhOC4skcsGh1EkTTZ"
							}
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/orders?pageNo=0&pageSize=10&sortBy=orderId&sortDir=asc",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"orders"
							],
							"query": [
								{
									"key": "pageNo",
									"value": "0"
								},
								{
									"key": "pageSize",
									"value": "10"
								},
								{
									"key": "sortBy",
									"value": "orderId"
								},
								{
									"key": "sortDir",
									"value": "asc"
								}
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Search Order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJuZ3V5ZW50aWVuZHVuZyIsImlhdCI6MTcxOTk5NTYzOCwiZXhwIjoxNzIwMDgyMDM4fQ.uCVSb5kCskW6jZZGpIR-hHDhRx9jHsTG0JGpKmI-G8QU-gcfhOC4skcsGh1EkTTZ"
							}
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/orders/search?pageNo=0&pageSize=10&sortBy=orderId&status=1&status=2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"orders",
								"search"
							],
							"query": [
								{
									"key": "pageNo",
									"value": "0"
								},
								{
									"key": "pageSize",
									"value": "10"
								},
								{
									"key": "sortBy",
									"value": "orderId"
								},
								{
									"key": "status",
									"value": "1"
								},
								{
									"key": "status",
									"value": "2"
								}
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Search Order User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJuZ3V5ZW50aWVuZHVuZyIsImlhdCI6MTcxOTk5NTYzOCwiZXhwIjoxNzIwMDgyMDM4fQ.uCVSb5kCskW6jZZGpIR-hHDhRx9jHsTG0JGpKmI-G8QU-gcfhOC4skcsGh1EkTTZ"
							}
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/orders/search/user/1?pageNo=0&pageSize=10&sortBy=orderId&sortDir=asc&minAmount=90000&status=1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"orders",
								"search",
								"user",
								"1"
							],
							"query": [
								{
									"key": "pageNo",
									"value": "0"
								},
								{
									"key": "pageSize",
									"value": "10"
								},
								{
									"key": "sortBy",
									"value": "orderId"
								},
								{
									"key": "sortDir",
									"value": "asc"
								},
								{
									"key": "minAmount",
									"value": "90000"
								},
								{
									"key": "status",
									"value": "1"
								}
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Get OrderDetail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJuZ3V5ZW50aWVuZHVuZyIsImlhdCI6MTcxOTk5NTYzOCwiZXhwIjoxNzIwMDgyMDM4fQ.uCVSb5kCskW6jZZGpIR-hHDhRx9jHsTG0JGpKmI-G8QU-gcfhOC4skcsGh1EkTTZ"
							}
						},
						"method": "GET",
						"header": [],
						"url": "http://localhost:8080/api/v1/orders/order/1",
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Get List Order By CusId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJuZ3V5ZW50aWVuZHVuZyIsImlhdCI6MTcxOTk5NTYzOCwiZXhwIjoxNzIwMDgyMDM4fQ.uCVSb5kCskW6jZZGpIR-hHDhRx9jHsTG0JGpKmI-G8QU-gcfhOC4skcsGh1EkTTZ"
							}
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Add your name in the body\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/orders/user/1?pageNo=0&pageSize=10&sortBy=orderId&sortDir=asc",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"orders",
								"user",
								"1"
							],
							"query": [
								{
									"key": "pageNo",
									"value": "0"
								},
								{
									"key": "pageSize",
									"value": "10"
								},
								{
									"key": "sortBy",
									"value": "orderId"
								},
								{
									"key": "sortDir",
									"value": "asc"
								}
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "Create Order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJuZ3V5ZW50aWVuZHVuZyIsImlhdCI6MTcxOTgxOTQzNSwiZXhwIjoxNzE5OTA1ODM1fQ.kASxng7IVmRdChmbdrRpj2mRbXk0aelE9fau7R8tsmE2ALw3HsHM0dG6ncV-LmN8"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"productId\": 1,\n    \"quantity\": 3\n  },\n  {\n    \"productId\": 2,\n    \"quantity\": 4\n  }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/orders?userId=1&addressId=1&voucherId=4",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"orders"
							],
							"query": [
								{
									"key": "userId",
									"value": "1"
								},
								{
									"key": "addressId",
									"value": "1"
								},
								{
									"key": "voucherId",
									"value": "4"
								}
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				}
			]
		},
		{
			"name": "Product",
			"item": [
				{
					"name": "Create Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJuZ3V5ZW50aWVuZHVuZyIsImlhdCI6MTcxODUyOTYzNiwiZXhwIjoxNzE4NjE2MDM2fQ.XQIYRyake4VewEYvO0jy06E9PLtl2bjO1APOuh__UYIMmFCQPPVEQllef5X5aTNW"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"productId\": 1,\n    \"quantity\": 10\n  },\n  {\n    \"productId\": 2,\n    \"quantity\": 10\n  }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:8080/api/v1/product",
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "Get List Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/product?pageNo=0&pageSize=10&sortBy=price&sortDir=esc",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"product"
							],
							"query": [
								{
									"key": "pageNo",
									"value": "0"
								},
								{
									"key": "pageSize",
									"value": "10"
								},
								{
									"key": "sortBy",
									"value": "price"
								},
								{
									"key": "sortDir",
									"value": "esc"
								}
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Search Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJuZ3V5ZW50aWVuZHVuZyIsImlhdCI6MTcxOTk5NTYzOCwiZXhwIjoxNzIwMDgyMDM4fQ.uCVSb5kCskW6jZZGpIR-hHDhRx9jHsTG0JGpKmI-G8QU-gcfhOC4skcsGh1EkTTZ"
							}
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/product/search?pageNo=0&pageSize=10&sortBy=productId&sortDir=asc&brandName=Abbott-grow",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"product",
								"search"
							],
							"query": [
								{
									"key": "pageNo",
									"value": "0"
								},
								{
									"key": "pageSize",
									"value": "10"
								},
								{
									"key": "sortBy",
									"value": "productId"
								},
								{
									"key": "sortDir",
									"value": "asc"
								},
								{
									"key": "brandName",
									"value": "Abbott-grow"
								}
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				}
			]
		},
		{
			"name": "Voucher",
			"item": [
				{
					"name": "Get List Vouchers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/vouchers?pageNo=0&pageSize=10&sortBy=voucherId&sortDir=asc",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"vouchers"
							],
							"query": [
								{
									"key": "pageNo",
									"value": "0"
								},
								{
									"key": "pageSize",
									"value": "10"
								},
								{
									"key": "sortBy",
									"value": "voucherId"
								},
								{
									"key": "sortDir",
									"value": "asc"
								}
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Get List Vouchers Manage",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/vouchers/manage?pageNo=0&pageSize=10&sortBy=voucherId&sortDir=asc",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"vouchers",
								"manage"
							],
							"query": [
								{
									"key": "pageNo",
									"value": "0"
								},
								{
									"key": "pageSize",
									"value": "10"
								},
								{
									"key": "sortBy",
									"value": "voucherId"
								},
								{
									"key": "sortDir",
									"value": "asc"
								}
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Get List Vouchers in UI",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/vouchers?pageNo=0&pageSize=10&sortBy=voucherId&sortDir=asc",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"vouchers"
							],
							"query": [
								{
									"key": "pageNo",
									"value": "0"
								},
								{
									"key": "pageSize",
									"value": "10"
								},
								{
									"key": "sortBy",
									"value": "voucherId"
								},
								{
									"key": "sortDir",
									"value": "asc"
								}
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Get Voucher By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": "http://localhost:8080/api/v1/vouchers/4",
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Get List Vouchers By UserId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/vouchers/member?userId=1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"vouchers",
								"member"
							],
							"query": [
								{
									"key": "userId",
									"value": "1"
								}
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Update Voucher",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJuZ3V5ZW50aWVuZHVuZyIsImlhdCI6MTcxOTkwNTk3NywiZXhwIjoxNzE5OTkyMzc3fQ.6VEK5WhcieeyT7N8McD2MDEcVNQrn7WtET1Myk99Yt-0UiiHcmdq04QNpyBAVX84"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"voucherId\": 4,\n    \"voucherCode\": \"KK12348\",\n    \"voucherName\": \"Giam sau\",\n    \"quantity\": 100,\n    \"quantityUse\": 5,\n    \"discount\": 100000.0,\n    \"minOrderAmount\": 50000.0,\n    \"startDate\": \"2024-07-03T14:37:40.996\",\n    \"endDate\": \"2024-07-30T16:56:28.996\",\n    \"status\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:8080/api/v1/vouchers",
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "Delete Voucher",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJuZ3V5ZW50aWVuZHVuZyIsImlhdCI6MTcxODExOTQ5MCwiZXhwIjoxNzE4NzI0MjkwfQ.I0nWCs3wU79lTuBJKhXAJnQrT39lYI6m0kIAwKRudU5F_tTI4T2HdxuFw8-vmaOj"
							}
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"voucherId\": 0,\n  \"voucherCode\": \"KK12344\",\n  \"voucherName\": \"string\",\n  \"quantity\": 1,\n  \"discount\": 1000,\n  \"minOrderAmount\": 0,\n  \"startDate\": \"2024-06-12T15:45:13.006Z\",\n  \"endDate\": \"2024-06-13T15:45:13.006Z\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:8080/api/v1/vouchers/1",
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "Create Voucher",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJuZ3V5ZW50aWVuZHVuZyIsImlhdCI6MTcxOTgxOTQzNSwiZXhwIjoxNzE5OTA1ODM1fQ.kASxng7IVmRdChmbdrRpj2mRbXk0aelE9fau7R8tsmE2ALw3HsHM0dG6ncV-LmN8"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"voucherId\": 0,\n  \"voucherCode\": \"KK12348\",\n  \"voucherName\": \"Giam sau\",\n  \"quantity\": 100,\n  \"quantityUse\": 5,\n  \"discount\": 100000,\n  \"minOrderAmount\": 50000,\n  \"startDate\": \"2024-07-01T14:40:40.996Z\",\n  \"endDate\": \"2024-07-30T16:56:28.996Z\",\n  \"status\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:8080/api/v1/vouchers",
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "Create Voucher For Member",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJuZ3V5ZW50aWVuZHVuZyIsImlhdCI6MTcxOTgxOTQzNSwiZXhwIjoxNzE5OTA1ODM1fQ.kASxng7IVmRdChmbdrRpj2mRbXk0aelE9fau7R8tsmE2ALw3HsHM0dG6ncV-LmN8"
							}
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/vouchers/member?userId=1&voucherId=4",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"vouchers",
								"member"
							],
							"query": [
								{
									"key": "userId",
									"value": "1"
								},
								{
									"key": "voucherId",
									"value": "4"
								}
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "Get All Account",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJuZ3V5ZW50aWVuZHVuZyIsImlhdCI6MTcxOTg0NzU2MCwiZXhwIjoxNzE5OTMzOTYwfQ.bDDDSvCVOoJWXuEeUd6ur6MoxQQfN7NUsfXc3FUcOxPUhyAJj6pkfljqUDDr-Ne0"
							}
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/users?pageNo=0&pageSize=10&sortBy=userId&sortDir=asc",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"users"
							],
							"query": [
								{
									"key": "pageNo",
									"value": "0"
								},
								{
									"key": "pageSize",
									"value": "10"
								},
								{
									"key": "sortBy",
									"value": "userId"
								},
								{
									"key": "sortDir",
									"value": "asc"
								}
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				}
			]
		},
		{
			"name": "Blog",
			"item": [
				{
					"name": "Get Blog",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/blogs?pageNo=0&pageSize=10&sortBy=blogId&sortDir=asc",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"blogs"
							],
							"query": [
								{
									"key": "pageNo",
									"value": "0"
								},
								{
									"key": "pageSize",
									"value": "10"
								},
								{
									"key": "sortBy",
									"value": "blogId"
								},
								{
									"key": "sortDir",
									"value": "asc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Blog By Id",
					"request": {
						"method": "GET",
						"header": [],
						"url": "http://localhost:8080/api/v1/blogs/2"
					},
					"response": []
				},
				{
					"name": "Create Blog",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJuZ3V5ZW50aWVuZHVuZyIsImlhdCI6MTcyMDA3MzQ5MiwiZXhwIjoxNzIwMTU5ODkyfQ.ShFp4LPC6isd-iWaDDvm8BU7rGOX4xjJdBeYlIbrKdtGozAWV_hcgvtwDctgIHog"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"blogId\": 0,\r\n  \"title\": \"stringgg\",\r\n  \"content\": \"string\",\r\n  \"image\": \"string\",\r\n  \"userId\": 2,\r\n  \"productId\": [\r\n    1, 2\r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:8080/api/v1/blogs"
					},
					"response": []
				},
				{
					"name": "Update Blog",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJuZ3V5ZW50aWVuZHVuZyIsImlhdCI6MTcyMDA3MzQ5MiwiZXhwIjoxNzIwMTU5ODkyfQ.ShFp4LPC6isd-iWaDDvm8BU7rGOX4xjJdBeYlIbrKdtGozAWV_hcgvtwDctgIHog"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"blogId\": 2,\r\n  \"title\": \"string\",\r\n  \"content\": \"string\",\r\n  \"image\": \"string\",\r\n  \"userId\": 2,\r\n  \"productId\": [\r\n    3\r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:8080/api/v1/blogs"
					},
					"response": []
				},
				{
					"name": "Delete Blog",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJuZ3V5ZW50aWVuZHVuZyIsImlhdCI6MTcyMDA3MzQ5MiwiZXhwIjoxNzIwMTU5ODkyfQ.ShFp4LPC6isd-iWaDDvm8BU7rGOX4xjJdBeYlIbrKdtGozAWV_hcgvtwDctgIHog"
							}
						},
						"method": "DELETE",
						"header": [],
						"url": "http://localhost:8080/api/v1/blogs/3"
					},
					"response": []
				},
				{
					"name": "Search Blog",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/blogs/search?pageNo=0&pageSize=10&sortBy=blogId&sortDir=asc&searchText=str",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"blogs",
								"search"
							],
							"query": [
								{
									"key": "pageNo",
									"value": "0"
								},
								{
									"key": "pageSize",
									"value": "10"
								},
								{
									"key": "sortBy",
									"value": "blogId"
								},
								{
									"key": "sortDir",
									"value": "asc"
								},
								{
									"key": "searchText",
									"value": "str"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	]
}